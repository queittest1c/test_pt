
#Область ПрограммныйИнтерфейс

Функция АналогСтрРазделить(Знач ИсходнаяСтрока, Знач Разделитель = ",") Экспорт
	
	Результат = Новый Массив;
	
	Позиция = СтрНайти(ИсходнаяСтрока, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(ИсходнаяСтрока, Позиция - 1);
		Если Не ПустаяСтрока(Подстрока) Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		ИсходнаяСтрока = Сред(ИсходнаяСтрока, Позиция + СтрДлина(Разделитель));
		Позиция = СтрНайти(ИсходнаяСтрока, Разделитель);
	КонецЦикла;
	
	Если Не ПустаяСтрока(ИсходнаяСтрока) Тогда
		Результат.Добавить(ИсходнаяСтрока);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // АналогСтрРазделить()

Функция АналогСтрСоединить(ИсходныйМассив, Знач Разделитель = ",") Экспорт
	
	Результат = "";
	
	Для Каждого ЭлементМассива Из ИсходныйМассив Цикл
		
		Результат = Результат + ЭлементМассива + Разделитель;
		
	КонецЦикла;
	
	ДлинаРазделителя = СтрДлина(Разделитель);
	
	Результат = Лев(Результат, СтрДлина(Результат) - ДлинаРазделителя);
	
	Возврат Результат;
	
КонецФункции

Функция СортироватьМассив(Знач ИсходныйМассив, ВариантСортировки = 1) Экспорт
	
	Если ВариантСортировки = 1 Тогда
		
		ВспомогательныйСписокЗначений = Новый СписокЗначений;
		ВспомогательныйСписокЗначений.ЗагрузитьЗначения(ИсходныйМассив);
		ВспомогательныйСписокЗначений.СортироватьПоЗначению();
		ИсходныйМассив = ВспомогательныйСписокЗначений.ВыгрузитьЗначения();
		
	ИначеЕсли ВариантСортировки = 2 Тогда
		
		МинимальныйЭлемент = 0;
		Для к = 0 По ИсходныйМассив.ВГраница() Цикл
			МинимальныйЭлемент = к;
			
			Для н = к + 1 ПО ИсходныйМассив.ВГраница() Цикл
				Если ИсходныйМассив[н] < ИсходныйМассив[МинимальныйЭлемент] Тогда
					МинимальныйЭлемент = н;
				КонецЕсли; 
			КонецЦикла; 
			
			Если ИсходныйМассив[МинимальныйЭлемент] = ИсходныйМассив[к] Тогда
				Продолжить;
			КонецЕсли;
			
			// Замена элементов
			ЭлементЗамены = ИсходныйМассив[к];
			ИсходныйМассив[к] = ИсходныйМассив[МинимальныйЭлемент];
			ИсходныйМассив[МинимальныйЭлемент] = ЭлементЗамены;
			
		КонецЦикла;
		
	ИначеЕсли ВариантСортировки = 3 Тогда
		
		Для к = 0 По ИсходныйМассив.ВГраница() Цикл
			Для н = 0 ПО ИсходныйМассив.Вграница() - к - 1 Цикл
				Если ИсходныйМассив[н] > ИсходныйМассив[н + 1] Тогда
					Замена = ИсходныйМассив[н];
					ИсходныйМассив[н] = ИсходныйМассив[н + 1];
					ИсходныйМассив[н + 1] = Замена;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ИсходныйМассив;
	
КонецФункции // СортироватьМассив()


Функция ОбработатьСтруктурыИМассивы(ВходнойПараметр) Экспорт
	
	// Здесь можно реализовать рекурсивный алгоритм :-)
	// но я пошел более простым путем.
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ВходнойПараметр);
	
	Результат = ЗаписьJSON.Закрыть();
	
	Возврат Результат;
	
КонецФункции // КоличествоГруппировокВНастройке ()

#КонецОбласти
